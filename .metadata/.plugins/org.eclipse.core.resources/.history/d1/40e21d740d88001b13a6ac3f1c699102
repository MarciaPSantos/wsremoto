package br.com.gama.modelo;


/* Design Pattern: conjunto com as melhores práticas para POO.
 * 	-DTO (Data Transfer Object): é um pattern, que descreve as melhores práticas para representar uma classe de um diagrama
 * em uma programação
 * Regras:
 * 	- TODOS os atributos devem ser privados
 * 	- CADA atributo, deve possuir INDIVIDUALMENTE um método de input (SET) e outro para output (GET)
 *  - Para criar um método de entrada e um de saída para cada atributo: deixa o cursor embaixo do ultimo atributo -> source -> generate getters and setters
 * 
 * modelo= model = beans = javabeans = to = dto (pacotes com classes originadas do diagrama)
 * teste = principal = implementacao (pacotes com as classes que contenham o main
 *  
 */  


public class Aluno {


	private String nome;
	private int matricula;
	private String email;
	private String fone;
	
	
	public String getNome() {
		return nome;
	}
		
	public void setNome(String nome) {
		this.nome = nome;
	}
	
	
	public int getMatricula() {
		return matricula;
	}
	
	public void setMatricula(int matricula) {
		this.matricula = matricula;
	}
	
	
	public String getEmail() {
		return email;
	}
	
	public void setEmail(String email) {
		this.email = email;
	}
	
	
	public String getFone() {
		return fone;
	}
	
	public void setFone(String fone) {
		this.fone = fone;
	}

	
	@Override
	public String toString() {
		return "Aluno [nome=" + nome + ", matricula=" + matricula + ", email=" + email + ", fone=" + fone + "]";
	}
	
	
			
	
}
